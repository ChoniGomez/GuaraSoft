/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaz;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logicaDeNegocio.Cliente;
import persistenciaJPA.exceptions.NonexistentEntityException;
import persistenciaJPA.exceptions.PreexistingEntityException;

/**
 *
 * @author Choni
 */
public class VentanaCliente extends javax.swing.JInternalFrame {
    //CONTROLADORA DE LA INTERFAZ
    private ControladoraInterfaz miLogica;
    private DefaultTableModel modelo = new DefaultTableModel(){
        // sobreescribo el metodo para que no se modifiquen los campos de las filas en la tabla
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex){
            return false;
        }
    };
    private int banderaModificar;//bandera de modificacion
    /**
     * Creates new form VentanaCliente
     */
    public VentanaCliente(ControladoraInterfaz unaControladora) throws PreexistingEntityException {
        initComponents();
        this.miLogica = unaControladora;
        this.activarDatosCliente(false);
        /// Agregar las cabeceras de la tabla
        modelo.addColumn("Id");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Telefono");
        modelo.addColumn("Correo electronico");
        modelo.addColumn("Domicilio");
        modelo.addColumn("DNI");
        modelo.addColumn("CUIL");
        modelo.addColumn("Condicion del Cliente");
        this.jTableClientes.setModel(modelo);
        this.cargarTabla();
        banderaModificar = -1;
        // manejo de la ventana
        this.setClosable(true);
        this.setIconifiable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabelCamposObligatorios = new javax.swing.JLabel();
        jButtonAceptarCliente = new javax.swing.JButton();
        jButtonCancelarCliente = new javax.swing.JButton();
        jLabelIdCliente = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelApellido = new javax.swing.JLabel();
        jLabelTelefono = new javax.swing.JLabel();
        jLabelCorreoElectronico = new javax.swing.JLabel();
        jLabelDomicilio = new javax.swing.JLabel();
        jLabelDni = new javax.swing.JLabel();
        jLabelCuil = new javax.swing.JLabel();
        jTextFieldIdCliente = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldApellido = new javax.swing.JTextField();
        jTextFieldTelefono = new javax.swing.JTextField();
        jTextFieldCorreoElectronico = new javax.swing.JTextField();
        jTextFieldDomicilio = new javax.swing.JTextField();
        jTextFieldDni = new javax.swing.JTextField();
        jTextFieldCuil = new javax.swing.JTextField();
        jCheckBoxTelefono = new javax.swing.JCheckBox();
        jCheckBoxCorreoElectronico = new javax.swing.JCheckBox();
        jComboBoxCondicion = new javax.swing.JComboBox();
        jLabelCondicion = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabelUsuario = new javax.swing.JLabel();
        jLabelContrasenia = new javax.swing.JLabel();
        jTextFieldUsuario = new javax.swing.JTextField();
        jTextFieldContrasenia = new javax.swing.JTextField();
        Eliminar = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButtonEliminarCliente = new javax.swing.JButton();
        jButtonModificarCliente = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos del cliente"));

        jLabelCamposObligatorios.setForeground(java.awt.Color.red);
        jLabelCamposObligatorios.setText("( * ) Campos obligatorios");

        jButtonAceptarCliente.setText("Aceptar");
        jButtonAceptarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarClienteActionPerformed(evt);
            }
        });

        jButtonCancelarCliente.setText("Cancelar");
        jButtonCancelarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarClienteActionPerformed(evt);
            }
        });

        jLabelIdCliente.setText("Id Cliente:");

        jLabelNombre.setText("Nombre:");

        jLabelApellido.setText("Apellido:");

        jLabelTelefono.setText("Telefono:");

        jLabelCorreoElectronico.setText("Correo electronico:");

        jLabelDomicilio.setText("Domicilio:");

        jLabelDni.setText("DNI:");

        jLabelCuil.setText("CUIL:");

        jTextFieldIdCliente.setEditable(false);

        jTextFieldApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldApellidoActionPerformed(evt);
            }
        });

        jTextFieldTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTelefonoActionPerformed(evt);
            }
        });

        jCheckBoxTelefono.setText("S/N");
        jCheckBoxTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxTelefonoActionPerformed(evt);
            }
        });

        jCheckBoxCorreoElectronico.setText("S/N");
        jCheckBoxCorreoElectronico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCorreoElectronicoActionPerformed(evt);
            }
        });

        jComboBoxCondicion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Minorista", "Mayorista" }));

        jLabelCondicion.setText("Condicion del cliente");

        jLabel1.setText("*");

        jLabel2.setText("*");

        jLabel3.setText("*");

        jLabel4.setText("*");

        jLabel5.setText("*");

        jLabel6.setText("*");

        jLabelUsuario.setText("Usuario:");

        jLabelContrasenia.setText("Contrase√±a:");

        jTextFieldUsuario.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButtonAceptarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCancelarCliente)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelCorreoElectronico)
                                .addComponent(jLabelTelefono, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelApellido, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelNombre, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelIdCliente, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelDomicilio, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelDni, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelCuil, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabelCondicion, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelUsuario, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelContrasenia, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBoxCondicion, 0, 121, Short.MAX_VALUE)
                                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldApellido, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldCorreoElectronico, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldDomicilio, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldDni, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldCuil, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldIdCliente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxTelefono)
                                    .addComponent(jCheckBoxCorreoElectronico)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldContrasenia, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelCamposObligatorios, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIdCliente)
                    .addComponent(jTextFieldIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombre)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelApellido)
                    .addComponent(jTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTelefono)
                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxTelefono))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCorreoElectronico)
                    .addComponent(jTextFieldCorreoElectronico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxCorreoElectronico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDomicilio)
                    .addComponent(jTextFieldDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDni)
                    .addComponent(jTextFieldDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCuil)
                    .addComponent(jTextFieldCuil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCondicion)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUsuario)
                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelContrasenia)
                    .addComponent(jTextFieldContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jLabelCamposObligatorios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAceptarCliente)
                    .addComponent(jButtonCancelarCliente))
                .addContainerGap())
        );

        Eliminar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Lista de clientes"));

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableClientes.setFocusable(false);
        jTableClientes.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableClientes);

        jButton3.setText("Nuevo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButtonEliminarCliente.setText("Eliminar");
        jButtonEliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarClienteActionPerformed(evt);
            }
        });

        jButtonModificarCliente.setText("Modificar");
        jButtonModificarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarClienteActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Buscar");

        jLabel7.setText("DNI:");

        jCheckBox1.setText("Buscar por DNI");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel7)
                .addGap(39, 39, 39)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addComponent(jButton1)
                .addGap(145, 145, 145)
                .addComponent(jCheckBox1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jCheckBox1))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout EliminarLayout = new javax.swing.GroupLayout(Eliminar);
        Eliminar.setLayout(EliminarLayout);
        EliminarLayout.setHorizontalGroup(
            EliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EliminarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(EliminarLayout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonModificarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonEliminarCliente))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        EliminarLayout.setVerticalGroup(
            EliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EliminarLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonEliminarCliente, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(EliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButtonModificarCliente)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldApellidoActionPerformed

    private void jButtonAceptarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarClienteActionPerformed
        // TODO add your handling code here:
        if(this.banderaModificar == -1){
            this.crearCliente();
        }
        else{
            this.modificarCliente();
        }
        this.activarDatosCliente(false);
        this.limpiarDatosClientes();
        try {       
            actualizarFilas();
        } catch (PreexistingEntityException ex) {
            Logger.getLogger(VentanaArticulo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAceptarClienteActionPerformed

    private void jButtonCancelarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarClienteActionPerformed
        // TODO add your handling code here:
        this.activarDatosCliente(false);
        this.limpiarDatosClientes();
    }//GEN-LAST:event_jButtonCancelarClienteActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.activarDatosCliente(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBoxTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxTelefonoActionPerformed
        // TODO add your handling code here:
        if (this.jCheckBoxTelefono.isSelected()) {
            this.jTextFieldTelefono.setText("Sin Telefono");
            this.jTextFieldTelefono.setEnabled(false);
        } else {
            this.jTextFieldTelefono.setEnabled(true);
            this.jTextFieldTelefono.setText("");
        }
    }//GEN-LAST:event_jCheckBoxTelefonoActionPerformed

    private void jTextFieldTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTelefonoActionPerformed

    private void jButtonModificarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarClienteActionPerformed
        // TODO add your handling code here:
        int seleccionArticulo = this.jTableClientes.getSelectedRow();
        int i = 1;
        if(seleccionArticulo == -1){// si no se selecciono nada de la tabla
            JOptionPane.showMessageDialog(null, "POR FAVOR SELECCIONE UNA FILA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            i = JOptionPane.showConfirmDialog(this, "Estas Seguro ?", "Vas a Modificar un Cliente", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                int id = Integer.parseInt(this.jTableClientes.getValueAt(seleccionArticulo, 0).toString());
                try {
                    Cliente unCliente = miLogica.dameMiCliente(id);
                    this.activarDatosCliente(true);
                    this.jTextFieldNombre.setText(unCliente.getNombre());
                    this.jTextFieldApellido.setText(unCliente.getApellido());
                    if(unCliente.getTelefono().equalsIgnoreCase("Sin Telefono")){
                        this.jTextFieldTelefono.setText("Sin Telefono");
                        this.jCheckBoxTelefono.setSelected(true);
                        this.jTextFieldTelefono.setEnabled(false);
                    }
                    else{
                        this.jTextFieldTelefono.setText(unCliente.getTelefono());
                        this.jCheckBoxTelefono.setSelected(false);
                    }  
                    if(unCliente.getCorreoElectronico().equalsIgnoreCase("Sin Correo Electronico")){
                        this.jTextFieldCorreoElectronico.setText("Sin Correo Electronico");
                        this.jCheckBoxCorreoElectronico.setSelected(true);
                        this.jTextFieldCorreoElectronico.setEnabled(false);
                    }
                    else{
                        this.jTextFieldCorreoElectronico.setText(unCliente.getCorreoElectronico());
                        this.jCheckBoxCorreoElectronico.setSelected(false);
                    }        
                    this.jTextFieldDomicilio.setText(unCliente.getDomicilio());
                    this.jTextFieldUsuario.setText(unCliente.getUsuario());
                    this.jTextFieldContrasenia.setText(unCliente.getContrasenia());
                    this.jTextFieldDni.setText(unCliente.getDni());
                    this.jTextFieldCuil.setText(unCliente.getCuil());
                    this.jTextFieldIdCliente.setText(String.valueOf(unCliente.getId()));
                    this.banderaModificar = unCliente.getId();
                    if(unCliente.getCondicionCliente() == false){
                        this.jComboBoxCondicion.setSelectedIndex(0);
                    }
                    else{
                        this.jComboBoxCondicion.setSelectedIndex(1);
                    }
                } catch (PreexistingEntityException ex) {
                    Logger.getLogger(VentanaProveedor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonModificarClienteActionPerformed

    private void jCheckBoxCorreoElectronicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCorreoElectronicoActionPerformed
        // TODO add your handling code here:
        if (this.jCheckBoxCorreoElectronico.isSelected()) {
            this.jTextFieldCorreoElectronico.setText("Sin Correo Electronico");
            this.jTextFieldCorreoElectronico.setEnabled(false);
        } else {
            this.jTextFieldCorreoElectronico.setEnabled(true);
            this.jTextFieldCorreoElectronico.setText("");
        }
    }//GEN-LAST:event_jCheckBoxCorreoElectronicoActionPerformed

    private void jButtonEliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarClienteActionPerformed
        // TODO add your handling code here:
        int seleccionCliente = this.jTableClientes.getSelectedRow();
        int i = 1;
        if(seleccionCliente == -1){// si no se selecciono nada de la tabla
            JOptionPane.showMessageDialog(null, "POR FAVOR SELECCIONE UNA FILA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            i = JOptionPane.showConfirmDialog(this, "Estas Seguro ?", "Vas a Modificar un Cliente", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                int id = Integer.parseInt(this.jTableClientes.getValueAt(seleccionCliente, 0).toString());
                try {
                    miLogica.eliminarCliente(id);
                    DefaultTableModel dtm = (DefaultTableModel) jTableClientes.getModel();
                    dtm.removeRow(jTableClientes.getSelectedRow());                    
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(VentanaCliente.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(VentanaCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonEliminarClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Eliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonAceptarCliente;
    private javax.swing.JButton jButtonCancelarCliente;
    private javax.swing.JButton jButtonEliminarCliente;
    private javax.swing.JButton jButtonModificarCliente;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBoxCorreoElectronico;
    private javax.swing.JCheckBox jCheckBoxTelefono;
    private javax.swing.JComboBox jComboBoxCondicion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelApellido;
    private javax.swing.JLabel jLabelCamposObligatorios;
    private javax.swing.JLabel jLabelCondicion;
    private javax.swing.JLabel jLabelContrasenia;
    private javax.swing.JLabel jLabelCorreoElectronico;
    private javax.swing.JLabel jLabelCuil;
    private javax.swing.JLabel jLabelDni;
    private javax.swing.JLabel jLabelDomicilio;
    private javax.swing.JLabel jLabelIdCliente;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelTelefono;
    private javax.swing.JLabel jLabelUsuario;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldApellido;
    private javax.swing.JTextField jTextFieldContrasenia;
    private javax.swing.JTextField jTextFieldCorreoElectronico;
    private javax.swing.JTextField jTextFieldCuil;
    private javax.swing.JTextField jTextFieldDni;
    private javax.swing.JTextField jTextFieldDomicilio;
    private javax.swing.JTextField jTextFieldIdCliente;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldTelefono;
    private javax.swing.JTextField jTextFieldUsuario;
    // End of variables declaration//GEN-END:variables
    
    public void activarDatosCliente(boolean b){
        this.jLabel1.setEnabled(b);
        this.jLabel2.setEnabled(b);
        this.jLabel3.setEnabled(b);
        this.jLabel4.setEnabled(b);
        this.jLabel5.setEnabled(b);
        this.jLabel6.setEnabled(b);
        this.jLabelIdCliente.setEnabled(b);
        this.jLabelNombre.setEnabled(b);
        this.jLabelApellido.setEnabled(b);
        this.jLabelTelefono.setEnabled(b);
        this.jLabelCorreoElectronico.setEnabled(b);
        this.jLabelDomicilio.setEnabled(b);
        this.jLabelDni.setEnabled(b);
        this.jLabelCuil.setEnabled(b);
        this.jLabelCondicion.setEnabled(b);
        this.jLabelCamposObligatorios.setEnabled(b);
        this.jLabelUsuario.setEnabled(b);
        this.jLabelContrasenia.setEnabled(b);
        this.jCheckBoxTelefono.setEnabled(b);
        this.jCheckBoxCorreoElectronico.setEnabled(b);
        this.jComboBoxCondicion.setEnabled(b);
        this.jButtonCancelarCliente.setEnabled(b);
        this.jButtonAceptarCliente.setEnabled(b);
        this.jTextFieldNombre.setEnabled(b);
        this.jTextFieldApellido.setEnabled(b);
        this.jTextFieldTelefono.setEnabled(b);
        this.jTextFieldCorreoElectronico.setEnabled(b);
        this.jTextFieldDomicilio.setEnabled(b);
        this.jTextFieldDni.setEnabled(b);
        this.jTextFieldCuil.setEnabled(b);   
        this.jTextFieldUsuario.setEnabled(b);
        this.jTextFieldContrasenia.setEnabled(b);
    }
    
    public void limpiarDatosClientes(){
        this.jTextFieldNombre.setText("");
        this.jTextFieldApellido.setText("");
        this.jTextFieldTelefono.setText("");
        this.jTextFieldCorreoElectronico.setText("");
        this.jTextFieldDomicilio.setText("");
        this.jTextFieldDni.setText("");
        this.jTextFieldCuil.setText("");
        this.jTextFieldIdCliente.setText("");
        this.jCheckBoxCorreoElectronico.setSelected(false);
        this.jCheckBoxTelefono.setSelected(false);
        this.jComboBoxCondicion.setSelectedIndex(0);
        this.jTextFieldUsuario.setText("");
        this.jTextFieldContrasenia.setText("");
    }
    
    public void crearCliente(){
        String nombre = this.jTextFieldNombre.getText();
        String apellido = this.jTextFieldApellido.getText();
        String telefono = this.jTextFieldTelefono.getText();
        String correoElectronico = this.jTextFieldCorreoElectronico.getText();
        String domicilio = this.jTextFieldDomicilio.getText();
        String dni = this.jTextFieldDni.getText();
        String cuil = this.jTextFieldCuil.getText();
        String contrasenia = this.jTextFieldContrasenia.getText();
        boolean condicionCliente;
        int condicion = this.jComboBoxCondicion.getSelectedIndex();
        if(condicion == 0){
            condicionCliente = false;
        }
        else{
            condicionCliente = true;
        }
        try {        
            this.miLogica.crearCliente(nombre, apellido, telefono, correoElectronico, domicilio, dni, cuil, condicionCliente, contrasenia);
        } catch (Exception ex) {
            Logger.getLogger(VentanaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void cargarTabla() throws PreexistingEntityException{
        List<Cliente> clientes = this.miLogica.dameClientes();
        Object[]fila= new Object[9];
        for(Cliente e : clientes){
            fila[0] = e.getId();
            fila[1] = e.getNombre();
            fila[2] = e.getApellido();
            fila[3] = e.getTelefono();
            fila[4] = e.getCorreoElectronico();
            fila[5] = e.getDomicilio();
            fila[6] = e.getDni();
            fila[7] = e.getCuil();
            if(e.getCondicionCliente() == true){
                fila[8] = "Mayorista";
            }
            else{
                fila[8] = "Minorista";
            }
            this.modelo.addRow(fila);
            this.jTableClientes.setModel(modelo);
        }        
    }
    
    public void modificarCliente(){
        String nombre = this.jTextFieldNombre.getText();
        String apellido = this.jTextFieldApellido.getText();
        String telefono = this.jTextFieldTelefono.getText();
        String correoElectronico = this.jTextFieldCorreoElectronico.getText();
        String domicilio = this.jTextFieldDomicilio.getText();
        String dni = this.jTextFieldDni.getText();
        String cuil = this.jTextFieldCuil.getText();
        String usuario = this.jTextFieldUsuario.getText();
        String contrasenia = this.jTextFieldContrasenia.getText();
        boolean condicionCliente;
        int condicion = this.jComboBoxCondicion.getSelectedIndex();
        if(condicion == 0){
            condicionCliente = false;
        }
        else{
            condicionCliente = true;
        }
        int id = Integer.parseInt(this.jTextFieldIdCliente.getText()); 
        try {
            this.miLogica.modificarCliente(id, nombre, apellido, telefono, correoElectronico, domicilio, dni, cuil, condicionCliente, usuario, contrasenia);
            this.banderaModificar = -1;
        } catch (Exception ex) {
            Logger.getLogger(VentanaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void actualizarFilas() throws PreexistingEntityException{
        DefaultTableModel modelo = (DefaultTableModel) jTableClientes.getModel();
        int filas = jTableClientes.getRowCount();
        for (int i = 0;filas>i; i++) {
            modelo.removeRow(0);
        }
        cargarTabla();
    }
}
