/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaz;

import iconos.ImagenFondo;
import java.awt.Dimension;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import persistenciaJPA.exceptions.PreexistingEntityException;

/**
 *
 * @author Choni
 */
public class VentanaEmpresaPrincipal extends javax.swing.JFrame {
    private ControladoraInterfaz miControladoraInterfaz = null;
    private VentanaProveedor miVentanaProveedor = null;
    private VentanaArticulo miVentanaArticulo = null;
    private VentanaCliente miVentanaCliente = null;
    private VentanaTique miVentanaTique = null;
    private VentanaFacturaCompra miVentanaFacturaCompra = null;
    private VentanaSucursal miVentanaSucursal = null;
    private VentanaEmpleado miVentanaEmpleado = null;
    private VentanaTurno miVentanaTurno = null;
    private VentanaEquipo miVentanaEquipo = null;
    private VentanaFacturaVenta miVentanaFacturaVenta = null;
    private VentanaCuentaCorriente miVentanaCuentaCorriente = null;
    private VentanaTecnologia miVentanaTecnologia = null;
    private VentanaCuota miVentanaCuota = null;
    
    /**
     * Creates new form VentanaEmpresaPrincipal
     */
    public VentanaEmpresaPrincipal() {
        initComponents();
        this.miControladoraInterfaz = new ControladoraInterfaz();
        this.jDesktopPane.setBorder(new ImagenFondo());
        this.setExtendedState(VentanaEmpresaPrincipal.MAXIMIZED_BOTH);
        this.setTitle("GuaraSoft");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuSalir = new javax.swing.JMenuItem();
        jMenuABM = new javax.swing.JMenu();
        jMenuABMArticulo = new javax.swing.JMenuItem();
        jMenuEmpleado = new javax.swing.JMenuItem();
        jMenuItemEquipo = new javax.swing.JMenuItem();
        jMenuABMCliente = new javax.swing.JMenuItem();
        jMenuFacturaCompra = new javax.swing.JMenuItem();
        jMenuFacturaVenta = new javax.swing.JMenuItem();
        jMenuProveedor = new javax.swing.JMenuItem();
        jMenuItemSucursal = new javax.swing.JMenuItem();
        jMenuTique = new javax.swing.JMenuItem();
        jMenuItemTurno = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jDesktopPaneLayout = new javax.swing.GroupLayout(jDesktopPane);
        jDesktopPane.setLayout(jDesktopPaneLayout);
        jDesktopPaneLayout.setHorizontalGroup(
            jDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1068, Short.MAX_VALUE)
        );
        jDesktopPaneLayout.setVerticalGroup(
            jDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
        );

        jMenu1.setText("Archivo");

        jMenuSalir.setText("Salir");
        jMenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSalirActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuSalir);

        jMenuBar1.add(jMenu1);

        jMenuABM.setText("Alta / Baja / Modificacion");

        jMenuABMArticulo.setText("Articulo");
        jMenuABMArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuABMArticuloActionPerformed(evt);
            }
        });
        jMenuABM.add(jMenuABMArticulo);

        jMenuEmpleado.setText("Empleado");
        jMenuEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEmpleadoActionPerformed(evt);
            }
        });
        jMenuABM.add(jMenuEmpleado);

        jMenuItemEquipo.setText("Equipo");
        jMenuItemEquipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEquipoActionPerformed(evt);
            }
        });
        jMenuABM.add(jMenuItemEquipo);

        jMenuABMCliente.setText("Cliente");
        jMenuABMCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuABMClienteActionPerformed(evt);
            }
        });
        jMenuABM.add(jMenuABMCliente);

        jMenuFacturaCompra.setText("Factura de compra");
        jMenuFacturaCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFacturaCompraActionPerformed(evt);
            }
        });
        jMenuABM.add(jMenuFacturaCompra);

        jMenuFacturaVenta.setText("Factura de venta");
        jMenuFacturaVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFacturaVentaActionPerformed(evt);
            }
        });
        jMenuABM.add(jMenuFacturaVenta);

        jMenuProveedor.setText("Proveedor");
        jMenuProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuProveedorActionPerformed(evt);
            }
        });
        jMenuABM.add(jMenuProveedor);

        jMenuItemSucursal.setText("Sucursal");
        jMenuItemSucursal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSucursalActionPerformed(evt);
            }
        });
        jMenuABM.add(jMenuItemSucursal);

        jMenuTique.setText("Tique");
        jMenuTique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuTiqueActionPerformed(evt);
            }
        });
        jMenuABM.add(jMenuTique);

        jMenuItemTurno.setText("Turno");
        jMenuItemTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTurnoActionPerformed(evt);
            }
        });
        jMenuABM.add(jMenuItemTurno);

        jMenuBar1.add(jMenuABM);

        jMenu2.setText("Empresa");

        jMenuItem2.setText("Articulo");
        jMenu2.add(jMenuItem2);

        jMenuItem1.setText("Empleado");
        jMenu2.add(jMenuItem1);

        jMenuItem3.setText("Proveedor");
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Sucursal");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Facturacion");

        jMenuItem5.setText("Compra");
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("Venta");
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Cliente");

        jMenuItem7.setText("Cliente");
        jMenu4.add(jMenuItem7);

        jMenuItem8.setText("CuentaCorriente");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem8);

        jMenuItem9.setText("Equipo");
        jMenu4.add(jMenuItem9);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Gestion de Turnos");

        jMenuItem10.setText("Envio a Tercero");
        jMenu5.add(jMenuItem10);

        jMenuItem11.setText("Estado de Ingreso");
        jMenu5.add(jMenuItem11);

        jMenuItem18.setText("Estado de Egreso");
        jMenu5.add(jMenuItem18);

        jMenuItem12.setText("Envio a Tercero");
        jMenu5.add(jMenuItem12);

        jMenuItem13.setText("Orden de Trabajo");
        jMenu5.add(jMenuItem13);

        jMenuBar1.add(jMenu5);

        jMenu6.setText("Gestion de Proyectos");

        jMenuItem14.setText("Proyecto");
        jMenu6.add(jMenuItem14);

        jMenuItem15.setText("Cuota");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem15);

        jMenuItem16.setText("Tecnologia");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem16);

        jMenuItem17.setText("Orden de Trabajo");
        jMenu6.add(jMenuItem17);

        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuProveedorActionPerformed
        if(this.miVentanaProveedor == null || this.miVentanaProveedor.isClosed()){// verifico si mi ventana no esta abierta
            try {        
                this.miVentanaProveedor = new VentanaProveedor(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaProveedor);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaProveedor.getSize();
            this.miVentanaProveedor.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaProveedor.setTitle("Proveedor");
            this.miVentanaProveedor.setVisible(true);
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA PROVEEDOR YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuProveedorActionPerformed

    private void jMenuABMArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuABMArticuloActionPerformed
        if(this.miVentanaArticulo == null || this.miVentanaArticulo.isClosed()){// verifico si mi ventana no esta abierta
            try {
                this.miVentanaArticulo = new VentanaArticulo(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaArticulo);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaArticulo.getSize();
            this.miVentanaArticulo.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaArticulo.setTitle("Articulo");
            this.miVentanaArticulo.show();
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA ARTICULO YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuABMArticuloActionPerformed

    private void jMenuABMClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuABMClienteActionPerformed
        // TODO add your handling code here:
        if(this.miVentanaCliente == null || this.miVentanaCliente.isClosed()){// verifico si mi ventana no esta abierta
        try {
            this.miVentanaCliente = new VentanaCliente(this.miControladoraInterfaz);
        } catch (PreexistingEntityException ex) {
            Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDesktopPane.add(this.miVentanaCliente);
        // codigo para centralizar un jInternalFrame
        Dimension desktopSize = jDesktopPane.getSize();
        Dimension FrameSize = this.miVentanaCliente.getSize();
        this.miVentanaCliente.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
        this.miVentanaCliente.setTitle("Cliente");
        this.miVentanaCliente.show();
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA CLIENTE YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuABMClienteActionPerformed

    private void jMenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuSalirActionPerformed

    private void jMenuTiqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuTiqueActionPerformed
        // TODO add your handling code here:
        if(this.miVentanaTique == null || this.miVentanaTique.isClosed()){// verifico si mi ventana no esta abierta
            try {
                this.miVentanaTique = new VentanaTique(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaTique);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaTique.getSize();
            this.miVentanaTique.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaTique.setTitle("Tique");
            this.miVentanaTique.show();
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA TIQUE YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuTiqueActionPerformed

    private void jMenuFacturaCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFacturaCompraActionPerformed
        // TODO add your handling code here:
        if(this.miVentanaFacturaCompra == null || this.miVentanaFacturaCompra.isClosed()){try {
            // verifico si mi ventana no esta abierta
            this.miVentanaFacturaCompra = new VentanaFacturaCompra(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaFacturaCompra);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaFacturaCompra.getSize();
            this.miVentanaFacturaCompra.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaFacturaCompra.setTitle("Factura de Compra");
            this.miVentanaFacturaCompra.show();
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA FACTURA DE COMPRA YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuFacturaCompraActionPerformed

    private void jMenuItemSucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSucursalActionPerformed
        // TODO add your handling code here:
        if(this.miVentanaSucursal == null || this.miVentanaSucursal.isClosed()){
            try {
            // verifico si mi ventana no esta abierta
            this.miVentanaSucursal = new VentanaSucursal(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaSucursal);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaSucursal.getSize();
            this.miVentanaSucursal.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaSucursal.setTitle("Sucursal");
            this.miVentanaSucursal.show();
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA SUCURSAL YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemSucursalActionPerformed

    private void jMenuEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEmpleadoActionPerformed
        // TODO add your handling code here:
        if(this.miVentanaEmpleado == null || this.miVentanaEmpleado.isClosed()){// verifico si mi ventana no esta abierta
            try {        
                this.miVentanaEmpleado = new VentanaEmpleado(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaEmpleado);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaEmpleado.getSize();
            this.miVentanaEmpleado.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaEmpleado.setTitle("Empleado");
            this.miVentanaEmpleado.setVisible(true);
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA EMPLEADO YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuEmpleadoActionPerformed

    private void jMenuItemTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTurnoActionPerformed
        // TODO add your handling code here:
        if(this.miVentanaTurno == null || this.miVentanaTurno.isClosed()){
            try {
            // verifico si mi ventana no esta abierta
            this.miVentanaTurno = new VentanaTurno(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaTurno);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaTurno.getSize();
            this.miVentanaTurno.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaTurno.setTitle("Turno");
            this.miVentanaTurno.show();
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA DE TURNO YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemTurnoActionPerformed

    private void jMenuItemEquipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEquipoActionPerformed
        // TODO add your handling code here:
        if(this.miVentanaEquipo == null || this.miVentanaEquipo.isClosed()){
            try {
                // verifico si mi ventana no esta abierta
                this.miVentanaEquipo = new VentanaEquipo(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaEquipo);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaEquipo.getSize();
            this.miVentanaEquipo.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaEquipo.setTitle("Equipo");
            this.miVentanaEquipo.show();
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA DE EQUIPO YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemEquipoActionPerformed

    private void jMenuFacturaVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFacturaVentaActionPerformed
        // TODO add your handling code here:
        if(this.miVentanaFacturaVenta == null || this.miVentanaFacturaVenta.isClosed()){
            try {
                // verifico si mi ventana no esta abierta
                this.miVentanaFacturaVenta = new VentanaFacturaVenta(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaFacturaVenta);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaFacturaVenta.getSize();
            this.miVentanaFacturaVenta.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaFacturaVenta.setTitle("Factura de Venta");
            this.miVentanaFacturaVenta.show();
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA DE FACTURA DE VENTA YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuFacturaVentaActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        if(this.miVentanaCuentaCorriente == null || this.miVentanaCuentaCorriente.isClosed()){
            try {
                // verifico si mi ventana no esta abierta
                this.miVentanaCuentaCorriente = new VentanaCuentaCorriente(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaCuentaCorriente);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaCuentaCorriente.getSize();
            this.miVentanaCuentaCorriente.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaCuentaCorriente.setTitle("Cuenta Corriente");
            this.miVentanaCuentaCorriente.show();
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA DE CUENTA CORRIENTE YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // TODO add your handling code here:
        if(this.miVentanaTecnologia == null || this.miVentanaTecnologia.isClosed()){
            try {
                // verifico si mi ventana no esta abierta
                this.miVentanaTecnologia = new VentanaTecnologia(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaTecnologia);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaTecnologia.getSize();
            this.miVentanaTecnologia.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaTecnologia.setTitle("Tecnologia");
            this.miVentanaTecnologia.show();
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA DE TECNOLOGIA YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        // TODO add your handling code here:
        if(this.miVentanaCuota == null || this.miVentanaCuota.isClosed()){
            try {
                // verifico si mi ventana no esta abierta
                this.miVentanaCuota = new VentanaCuota(this.miControladoraInterfaz);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaEmpresaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDesktopPane.add(this.miVentanaCuota);
            // codigo para centralizar un jInternalFrame
            Dimension desktopSize = jDesktopPane.getSize();
            Dimension FrameSize = this.miVentanaCuota.getSize();
            this.miVentanaCuota.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
            this.miVentanaCuota.setTitle("Cuota");
            this.miVentanaCuota.show();
        }
        else{// si mi ventana esta abierta
            JOptionPane.showMessageDialog(null,"LA VENTANA DE TECNOLOGIA YA ESTA ABIERTA.", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenuABM;
    private javax.swing.JMenuItem jMenuABMArticulo;
    private javax.swing.JMenuItem jMenuABMCliente;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuEmpleado;
    private javax.swing.JMenuItem jMenuFacturaCompra;
    private javax.swing.JMenuItem jMenuFacturaVenta;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItemEquipo;
    private javax.swing.JMenuItem jMenuItemSucursal;
    private javax.swing.JMenuItem jMenuItemTurno;
    private javax.swing.JMenuItem jMenuProveedor;
    private javax.swing.JMenuItem jMenuSalir;
    private javax.swing.JMenuItem jMenuTique;
    // End of variables declaration//GEN-END:variables
}
