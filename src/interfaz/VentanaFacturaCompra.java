/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaz;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logicaDeNegocio.Articulo;
import logicaDeNegocio.Detalle;
import logicaDeNegocio.FacturaCompra;
import logicaDeNegocio.Proveedor;
import persistenciaJPA.exceptions.NonexistentEntityException;
import persistenciaJPA.exceptions.PreexistingEntityException;

/**
 *
 * @author Choni
 */
public class VentanaFacturaCompra extends javax.swing.JInternalFrame {
    //CONTROLADORA DE LA INTERFAZ
    private ControladoraInterfaz miLogica;
    private DefaultTableModel modeloFacturaCompra = new DefaultTableModel(){
        // sobreescribo el metodo para que no se modifiquen los campos de las filas en la tabla
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex){
            return false;
        }
    };
    private DefaultTableModel modeloDetalles = new DefaultTableModel(){
        // sobreescribo el metodo para que no se modifiquen los campos de las filas en la tabla
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex){
            return false;
        }
    };
    private List<Articulo> articulosPersistencia = null;// lista de articulos de la persistencia
    private List<Detalle> detallesEliminar = null;// lista de detalles para eliminar
    private List<Articulo> articulos = null;// lista de articulos para cada detalle
    private Proveedor unProveedor = null;// objeto para almacenar un proveedor
    private Articulo miArticulo = null;
    private int banderaModificarFacturaCompra;//bandera de modificacion
    private List<Integer> misCantidadDetalles = null;// cantidades de cada articulo en cada detalle
    private SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");//formato para la fecha
    private Date fechaLocal = new Date ();// de aca obtengo la fecha del sistema
    private String fecha;
    /**
     * Creates new form VentanaFacturaCompra
     */
    public VentanaFacturaCompra(ControladoraInterfaz unaControladora) throws PreexistingEntityException {
        initComponents();
        this.miLogica = unaControladora;
        this.setClosable(true);// boton para cerrar
        this.setIconifiable(true);// boton para minimizar
        // Cabecera de la tabla la factura compra
        modeloFacturaCompra.addColumn("Id");
        modeloFacturaCompra.addColumn("Fecha");
        modeloFacturaCompra.addColumn("Hora");
        modeloFacturaCompra.addColumn("Proveedor");
        modeloFacturaCompra.addColumn("Total");
        this.jTableFacturasCompras.setModel(modeloFacturaCompra);
        // Cabecera de la tabla detalles
        modeloDetalles.addColumn("Producto");
        modeloDetalles.addColumn("Cantidad");
        modeloDetalles.addColumn("Precio Unitario");
        modeloDetalles.addColumn("Precio Total");
        this.jTableDetalles.setModel(modeloDetalles);
        // variables locales
        this.banderaModificarFacturaCompra = -1;
        // datos de la cantidad de cada detalle
        this.misCantidadDetalles = new LinkedList();
        this.articulos = new LinkedList();
        // busqueda de facturas de compra
        this.jButtonBuscarFacturaCompra.setEnabled(false);
        this.jDateChooserFacturaCompraBuscar.setEnabled(false);
        this.jLabelFechaBuscar.setEnabled(false);
        this.activarDatosFacturaCompra(false);
        this.cargarFacturasCompras();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanelDatosProveedor = new javax.swing.JPanel();
        jLabelIdProveedor = new javax.swing.JLabel();
        jLabelRazonSocial = new javax.swing.JLabel();
        jLabelFechaFactura = new javax.swing.JLabel();
        jTextFieldIdProveedor = new javax.swing.JTextField();
        jButtonBuscarProveedor = new javax.swing.JButton();
        jTextFieldRazonSocial = new javax.swing.JTextField();
        jLabelNumeroFactura = new javax.swing.JLabel();
        jTextFieldNumeroFactura = new javax.swing.JTextField();
        jLabelHoraFactura = new javax.swing.JLabel();
        jDateChooserFechaFactura = new com.toedter.calendar.JDateChooser();
        jLabelHoraSeparador = new javax.swing.JLabel();
        jSpinnerHora = new javax.swing.JSpinner();
        jSpinnerMinuto = new javax.swing.JSpinner();
        jPanelAgregarProducto = new javax.swing.JPanel();
        jLabelIdProducto = new javax.swing.JLabel();
        jTextFieldIdProducto = new javax.swing.JTextField();
        jButtonBuscarProducto = new javax.swing.JButton();
        jLabelNombreProducto = new javax.swing.JLabel();
        jTextFieldNombreProducto = new javax.swing.JTextField();
        jSpinnerCantidad = new javax.swing.JSpinner();
        jLabelCantidad = new javax.swing.JLabel();
        jButtonAgregar = new javax.swing.JButton();
        jButtonQuitar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDetalles = new javax.swing.JTable();
        jButtonAceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabelTotal = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jDateChooserFacturaCompraBuscar = new com.toedter.calendar.JDateChooser();
        jButtonBuscarFacturaCompra = new javax.swing.JButton();
        jCheckBoxBuscarPorFecha = new javax.swing.JCheckBox();
        jLabelFechaBuscar = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableFacturasCompras = new javax.swing.JTable();
        jButtonNuevo = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();

        jPanelDatosProveedor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos del Proveedor"));

        jLabelIdProveedor.setText("Id Proveedor:");

        jLabelRazonSocial.setText("Razon Social:");

        jLabelFechaFactura.setText("Fecha:");

        jButtonBuscarProveedor.setText("Buscar");
        jButtonBuscarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarProveedorActionPerformed(evt);
            }
        });

        jTextFieldRazonSocial.setEditable(false);

        jLabelNumeroFactura.setText("Numero factura:");

        jLabelHoraFactura.setText("Hora:");

        jLabelHoraSeparador.setText(":");

        jSpinnerHora.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        jSpinnerHora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jSpinnerHoraKeyTyped(evt);
            }
        });

        jSpinnerMinuto.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        jSpinnerMinuto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jSpinnerMinutoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelDatosProveedorLayout = new javax.swing.GroupLayout(jPanelDatosProveedor);
        jPanelDatosProveedor.setLayout(jPanelDatosProveedorLayout);
        jPanelDatosProveedorLayout.setHorizontalGroup(
            jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelIdProveedor)
                    .addComponent(jLabelRazonSocial)
                    .addComponent(jLabelFechaFactura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldIdProveedor)
                    .addComponent(jTextFieldRazonSocial)
                    .addComponent(jDateChooserFechaFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosProveedorLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBuscarProveedor))
                    .addGroup(jPanelDatosProveedorLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelNumeroFactura)
                            .addComponent(jLabelHoraFactura))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelDatosProveedorLayout.createSequentialGroup()
                                .addComponent(jSpinnerHora, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelHoraSeparador, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanelDatosProveedorLayout.setVerticalGroup(
            jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosProveedorLayout.createSequentialGroup()
                .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIdProveedor)
                    .addComponent(jTextFieldIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscarProveedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRazonSocial)
                    .addComponent(jLabelNumeroFactura)
                    .addComponent(jTextFieldNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelFechaFactura)
                        .addComponent(jLabelHoraFactura)
                        .addComponent(jLabelHoraSeparador)
                        .addComponent(jSpinnerHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinnerMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooserFechaFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelAgregarProducto.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Agregar Producto"));

        jLabelIdProducto.setText("Id. Producto:");

        jButtonBuscarProducto.setText("Buscar");
        jButtonBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarProductoActionPerformed(evt);
            }
        });

        jLabelNombreProducto.setText("Nombre Producto:");

        jTextFieldNombreProducto.setEditable(false);

        jSpinnerCantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, 1000, 1));

        jLabelCantidad.setText("Cantidad:");

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jButtonQuitar.setText("Quitar");
        jButtonQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAgregarProductoLayout = new javax.swing.GroupLayout(jPanelAgregarProducto);
        jPanelAgregarProducto.setLayout(jPanelAgregarProductoLayout);
        jPanelAgregarProductoLayout.setHorizontalGroup(
            jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                        .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelNombreProducto)
                            .addComponent(jLabelIdProducto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                                .addComponent(jTextFieldNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(jLabelCantidad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                                .addComponent(jTextFieldIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBuscarProducto))))
                    .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                        .addComponent(jButtonAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonQuitar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelAgregarProductoLayout.setVerticalGroup(
            jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIdProducto)
                    .addComponent(jTextFieldIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscarProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNombreProducto)
                    .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelCantidad)
                        .addComponent(jSpinnerCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAgregar)
                    .addComponent(jButtonQuitar))
                .addContainerGap())
        );

        jTableDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableDetalles.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableDetalles);

        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jLabelTotal.setText("Total: $");

        jTextFieldTotal.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabelTotal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(173, 173, 173))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jPanelAgregarProducto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanelDatosProveedor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCancelar)
                        .addGap(10, 10, 10))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDatosProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTotal)
                    .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAceptar)
                    .addComponent(jButtonCancelar))
                .addGap(17, 17, 17))
        );

        jScrollPane1.setViewportView(jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Facturas de Compras"));

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonBuscarFacturaCompra.setText("Buscar");
        jButtonBuscarFacturaCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarFacturaCompraActionPerformed(evt);
            }
        });

        jCheckBoxBuscarPorFecha.setText("Buscar por fecha");
        jCheckBoxBuscarPorFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBuscarPorFechaActionPerformed(evt);
            }
        });

        jLabelFechaBuscar.setText("Fecha:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelFechaBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooserFacturaCompraBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonBuscarFacturaCompra)
                .addGap(40, 40, 40)
                .addComponent(jCheckBoxBuscarPorFecha)
                .addGap(19, 19, 19))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelFechaBuscar)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonBuscarFacturaCompra)
                        .addComponent(jCheckBoxBuscarPorFecha))
                    .addComponent(jDateChooserFacturaCompraBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTableFacturasCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableFacturasCompras.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTableFacturasCompras);

        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButtonNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonEliminar))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNuevo)
                    .addComponent(jButtonEliminar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        // TODO add your handling code here:
        this.activarDatosFacturaCompra(true);
        this.activarBotonAceptar();
        this.jSpinnerCantidad.setEnabled(false);
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        this.jSpinnerCantidad.setValue(1);// reseteo la cantidad
        this.limpiarDatosFacturaCompra();
        this.activarDatosFacturaCompra(false);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        // TODO add your handling code here:
        this.crearTique();
        this.activarDatosFacturaCompra(false);
        this.activarBotonAceptar();
        this.limpiarDatosFacturaCompra();
        try {       
            this.actualizarFacturasCompras();
        } catch (PreexistingEntityException ex) {
            Logger.getLogger(VentanaArticulo.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.articulos = null;
        this.misCantidadDetalles = null;
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    private void jSpinnerHoraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinnerHoraKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetterOrDigit(c)){
            evt.consume();
            this.jSpinnerHora.setValue(0);
        }
    }//GEN-LAST:event_jSpinnerHoraKeyTyped

    private void jSpinnerMinutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinnerMinutoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetterOrDigit(c)){
            evt.consume();
            this.jSpinnerHora.setValue(0);
        }
    }//GEN-LAST:event_jSpinnerMinutoKeyTyped

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        // TODO add your handling code here:
        int cantidadProducto = Integer.valueOf(this.jSpinnerCantidad.getValue().toString());// almaceno la cantidad del articulo
        if(this.miArticulo != null){// verifico si encontro un articulo
            if(miArticulo.esMenorOIgualCantidadoRequerida(cantidadProducto)){// verifico si la cantidad requerida es igual o menor a la cantidad en stock
                // limpio los campos para buscar un nuevo articulo
                this.jTextFieldNombreProducto.setText("");
                this.jTextFieldIdProducto.setText("");
                // agrego un articulo a la lista de compras
                this.articulos.add(miArticulo);
                this.misCantidadDetalles.add(cantidadProducto);
                // desactivo la cantidad
                this.activarCantidad(false);
                this.jSpinnerCantidad.setValue(1);// reseteo la cantidad
                this.actualizarDetalles();
                this.calcularTotal();// calculo el total
                this.miArticulo = null;
            }
            else{
                JOptionPane.showMessageDialog(null, "LA CANTIDAD A COMPRAR ES MAYOR DE LO QUE EXISTE EN STOCK", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            }
        }
        else{// si nunca se busco un articulo, lo informo
            JOptionPane.showMessageDialog(null, "NO SE BUSCO NINGUN ARTICULO", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        this.activarBotonAceptar();
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonBuscarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarProveedorActionPerformed
        // TODO add your handling code here:
        if(this.jTextFieldIdProveedor.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "INGRESE UN CODIGO PARA REALIZAR LA BUSQUEDA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);JOptionPane.showMessageDialog(null, "INGRESE UN CODIGO PARA REALIZAR LA BUSQUEDA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            List<Proveedor> proveedores = null;
            int idCliente = Integer.parseInt(this.jTextFieldIdProveedor.getText());// leo y guardo el id de un proveedor
            try {
                proveedores = this.miLogica.dameProveedores();
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaTurno.class.getName()).log(Level.SEVERE, null, ex);
            }
            for(Proveedor e : proveedores){// recorro la lista de proveedores
                if(e.isId(idCliente)){// si corresponde al id lo almaceno en unProveedor
                    this.unProveedor = e;
                }
            }
            if(this.unProveedor != null){// verifico si encontro al Proveedor
                this.jButtonBuscarProveedor.setEnabled(true);
                this.jTextFieldRazonSocial.setText(this.unProveedor.getRazonSocial());// muestro el nombre del proveedor
            }
            else{// si no encuentro a un cliente con el idCliente
                JOptionPane.showMessageDialog(null, "NO EXISTE UN PROVEEDOR CON EL ID: "+idCliente, "ERROR", JOptionPane.ERROR_MESSAGE);
                this.jButtonBuscarProveedor.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jButtonBuscarProveedorActionPerformed

    private void jButtonBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarProductoActionPerformed
        // TODO add your handling code here:
        if(this.jTextFieldIdProducto.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "INGRESE UN CODIGO PARA REALIZAR LA BUSQUEDA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            try {
                this.articulosPersistencia = this.miLogica.dameArticulos();
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaFacturaCompra.class.getName()).log(Level.SEVERE, null, ex);
            }
            boolean encontrar = false;//bandera para encontrar
            for(Articulo e : this.articulosPersistencia){
                if(e.isId(Integer.parseInt(this.jTextFieldIdProducto.getText()))){
                    encontrar = true;// cambio mi bandera a verdadero porque encontro
                    this.miArticulo = e;// si encuentro el articulo, lo guardo en miArticulo
                    this.jTextFieldNombreProducto.setText(e.getNombre());// muestro el nombre del producto
                    this.activarCantidad(true);// activo mi jspinner para poner la cantidad
                }
            }
            if(encontrar == false){
                JOptionPane.showMessageDialog(null, "NO SE ENCONTRO NINGUN ARTICULO CON EL CODIGO: "+ this.jTextFieldIdProducto.getText(), "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
                this.miArticulo = null;// si no encuentro el articulo, miArticulo apunta a null
            }
        }
    }//GEN-LAST:event_jButtonBuscarProductoActionPerformed

    private void jButtonQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitarActionPerformed
        // TODO add your handling code here:
        int seleccionDetalle = this.jTableDetalles.getSelectedRow();
        int i = 1;
        if(seleccionDetalle < 0){// si no se selecciono ninguna fila
            JOptionPane.showMessageDialog(null, "POR FAVOR SELECCIONE UNA FILA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            i = JOptionPane.showConfirmDialog(this, "Estas Seguro ?", "Vas a Eliminar un Detalle", JOptionPane.YES_NO_OPTION);
            if(i == 0){
                this.eliminarDetalle(seleccionDetalle);
                this.calcularTotal();
            }
        }
        this.activarBotonAceptar();
    }//GEN-LAST:event_jButtonQuitarActionPerformed

    private void jButtonBuscarFacturaCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarFacturaCompraActionPerformed
        // TODO add your handling code here:
        Date fechaBuscar = this.jDateChooserFacturaCompraBuscar.getDate();// guardo en mi variable la fecha del sistema
        String fechaLarga = fechaBuscar.toLocaleString();// transformo a strinng mi fecha
        String fechaCorta = fechaLarga.substring(0, 10);// saco solamente la fecha de mi fechaLarga
        List<FacturaCompra> facturasCompras = new LinkedList<FacturaCompra>();
        List<FacturaCompra> facturasComprasConFecha = new LinkedList<FacturaCompra>();
        try {
            facturasCompras = this.miLogica.dameFacturasCompras();
        } catch (PreexistingEntityException ex) {
            Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(!facturasCompras.isEmpty()){// si mi lista no esta vacia la recorro
            for(FacturaCompra e : facturasCompras){//recorro mi lista de facturas de compras
                if(e.isFechaComprobante(fechaCorta)){//pregunto si la factura de compra contiene la fecha que saque del jDateChooser
                        facturasComprasConFecha.add(e);// agrego una factura de compra a la lista
                }
            }
        }
        if(facturasComprasConFecha.isEmpty()){// pregunto si mi lista esta vacia
            JOptionPane.showMessageDialog(null, "NO HAY FACTURAS DE COMPRAS EMITIDAS EN LA FECHA: "+ fechaCorta, "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            this.jCheckBoxBuscarPorFecha.setSelected(false);
            this.jButtonBuscarFacturaCompra.setEnabled(false);
            this.jDateChooserFacturaCompraBuscar.setEnabled(false);
            this.jDateChooserFacturaCompraBuscar.setCalendar(null);// limpio el selector de fecha
        }
        else{// si mi lista no esta vacia
            // limpio mi tabla de facturas de compra
            DefaultTableModel modelo = (DefaultTableModel) jTableFacturasCompras.getModel();
            int filas = jTableFacturasCompras.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
            // cargo mi tabla con la nueva lista de factura de compra
            Object[]fila= new Object[5];
            for(FacturaCompra e : facturasComprasConFecha){
                    fila[0] = e.getIdComprobante();
                    fila[1] = e.getFechaComprobante();
                    fila[2] = e.getHoraComprobante();
                    fila[3] = e.getUnProveedor().getRazonSocial();
                    fila[4] = e.getTotalComprobante(); 
                    this.modeloFacturaCompra.addRow(fila);
                    this.jTableFacturasCompras.setModel(modeloFacturaCompra);
            }
        }
    }//GEN-LAST:event_jButtonBuscarFacturaCompraActionPerformed

    private void jCheckBoxBuscarPorFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBuscarPorFechaActionPerformed
        // TODO add your handling code here:
        if (this.jCheckBoxBuscarPorFecha.isSelected()) {
            this.jLabelFechaBuscar.setEnabled(true);
            this.jButtonBuscarFacturaCompra.setEnabled(true);
            this.jDateChooserFacturaCompraBuscar.setEnabled(true);
            this.jDateChooserFacturaCompraBuscar.setDate(new Date());// agrego el dia de hoy
        } else {
            this.jLabelFechaBuscar.setEnabled(false);
            this.jButtonBuscarFacturaCompra.setEnabled(false);
            this.jDateChooserFacturaCompraBuscar.setEnabled(false);
            this.jDateChooserFacturaCompraBuscar.setCalendar(null);// limpio el selector de fecha
            // limpio mi tabla de facturas de compras
            DefaultTableModel modelo = (DefaultTableModel) jTableFacturasCompras.getModel();
            int filas = jTableFacturasCompras.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
            try {
                this.cargarFacturasCompras();// cargo todos las facturas de compra en la tabla
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jCheckBoxBuscarPorFechaActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        int seleccionArticulo = this.jTableFacturasCompras.getSelectedRow();
        int i = 1;
        if(seleccionArticulo == -1){// si no se selecciono nada de la tabla
            JOptionPane.showMessageDialog(null, "POR FAVOR SELECCIONE UNA FILA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            i = JOptionPane.showConfirmDialog(this, "Estas Seguro ?", "Vas a Eliminar una Factura de Compra", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                try {
                    int id = Integer.parseInt(this.jTableFacturasCompras.getValueAt(seleccionArticulo, 0).toString());
                    this.miLogica.eliminarFacturaCompra(id);
                    // elimino mi factura de compra de la tabla
                    DefaultTableModel dtm = (DefaultTableModel) jTableFacturasCompras.getModel();
                    dtm.removeRow(jTableFacturasCompras.getSelectedRow()); 
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonBuscarFacturaCompra;
    private javax.swing.JButton jButtonBuscarProducto;
    private javax.swing.JButton jButtonBuscarProveedor;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonQuitar;
    private javax.swing.JCheckBox jCheckBoxBuscarPorFecha;
    private com.toedter.calendar.JDateChooser jDateChooserFacturaCompraBuscar;
    private com.toedter.calendar.JDateChooser jDateChooserFechaFactura;
    private javax.swing.JLabel jLabelCantidad;
    private javax.swing.JLabel jLabelFechaBuscar;
    private javax.swing.JLabel jLabelFechaFactura;
    private javax.swing.JLabel jLabelHoraFactura;
    private javax.swing.JLabel jLabelHoraSeparador;
    private javax.swing.JLabel jLabelIdProducto;
    private javax.swing.JLabel jLabelIdProveedor;
    private javax.swing.JLabel jLabelNombreProducto;
    private javax.swing.JLabel jLabelNumeroFactura;
    private javax.swing.JLabel jLabelRazonSocial;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelAgregarProducto;
    private javax.swing.JPanel jPanelDatosProveedor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinnerCantidad;
    private javax.swing.JSpinner jSpinnerHora;
    private javax.swing.JSpinner jSpinnerMinuto;
    private javax.swing.JTable jTableDetalles;
    private javax.swing.JTable jTableFacturasCompras;
    private javax.swing.JTextField jTextFieldIdProducto;
    private javax.swing.JTextField jTextFieldIdProveedor;
    private javax.swing.JTextField jTextFieldNombreProducto;
    private javax.swing.JTextField jTextFieldNumeroFactura;
    private javax.swing.JTextField jTextFieldRazonSocial;
    private javax.swing.JTextField jTextFieldTotal;
    // End of variables declaration//GEN-END:variables
    public void cargarFacturasCompras() throws PreexistingEntityException{
        List<FacturaCompra> facturasCompras = this.miLogica.dameFacturasCompras();
        Object[]fila= new Object[5];
        for(FacturaCompra e : facturasCompras){
                fila[0] = e.getIdComprobante();
                fila[1] = e.getFechaComprobante();
                fila[2] = e.getHoraComprobante();
                fila[3] = e.getUnProveedor().getRazonSocial();  
                fila[4] = e.getTotalComprobante();
                this.modeloFacturaCompra.addRow(fila);
                this.jTableFacturasCompras.setModel(modeloFacturaCompra);
        }
    }
    
    public void actualizarFacturasCompras() throws PreexistingEntityException{
        DefaultTableModel modelo = (DefaultTableModel) jTableFacturasCompras.getModel();
        int filas = jTableFacturasCompras.getRowCount();
        for (int i = 0;filas>i; i++) {
            modelo.removeRow(0);
        }
        this.cargarFacturasCompras();
    }
    
    public void activarDatosFacturaCompra(boolean b){
        // datos del proveedor
        this.jPanelDatosProveedor.setEnabled(b);
        this.jLabelIdProveedor.setEnabled(b);
        this.jLabelRazonSocial.setEnabled(b);
        this.jLabelFechaFactura.setEnabled(b);
        this.jLabelNumeroFactura.setEnabled(b);
        this.jLabelHoraFactura.setEnabled(b);
        this.jTextFieldIdProveedor.setEnabled(b);
        this.jTextFieldRazonSocial.setEnabled(b);
        this.jDateChooserFechaFactura.setEnabled(b);
        this.jTextFieldNumeroFactura.setEnabled(b);
        this.jLabelHoraFactura.setEnabled(b);
        this.jSpinnerHora.setEnabled(b);
        this.jSpinnerMinuto.setEnabled(b);
        this.jButtonBuscarProveedor.setEnabled(b);
        // datos del producto
        this.jPanelAgregarProducto.setEnabled(b);
        this.jLabelIdProducto.setEnabled(b);
        this.jLabelNombreProducto.setEnabled(b);
        this.jLabelCantidad.setEnabled(b);
        this.jTextFieldIdProducto.setEnabled(b);
        this.jTextFieldNombreProducto.setEnabled(b);
        this.jSpinnerCantidad.setEnabled(b);
        this.jButtonBuscarProducto.setEnabled(b);
        this.jTableDetalles.setEnabled(b);
        this.jButtonAgregar.setEnabled(b);
        this.jButtonQuitar.setEnabled(b);
        // total
        this.jTextFieldTotal.setEnabled(b);
        this.jLabelTotal.setEnabled(b);
        // botones
        this.jButtonCancelar.setEnabled(b);
        this.jButtonAceptar.setEnabled(b);
    }
    
    
    public void activarCantidad(boolean b){        
        this.jSpinnerCantidad.setEnabled(b);
    }
    
    public void limpiarDatosFacturaCompra(){
        // borro todos los detalles de la factura de compra
        DefaultTableModel modelo = (DefaultTableModel) jTableDetalles.getModel();
        int filas = jTableDetalles.getRowCount();
        for (int i = 0;filas>i; i++) {
            modelo.removeRow(0);
        }
        this.jTextFieldTotal.setText("");
        // datos del proveedor
        this.jTextFieldIdProveedor.setText("");
        this.jTextFieldRazonSocial.setText("");
        this.jTextFieldNumeroFactura.setText("");
        this.jTextFieldIdProducto.setText("");
        this.jDateChooserFechaFactura.setCalendar(null);// limpio el jdatechooser
    }
    
    public void actualizarDetalles(){// borro todos los detalles uno a uno
        DefaultTableModel modelo = (DefaultTableModel) jTableDetalles.getModel();
        int filas = jTableDetalles.getRowCount();
        for (int i = 0;filas>i; i++) {
            modelo.removeRow(0);
        }
        this.cargarDetalles();
    }
    
    public void cargarDetalles(){
        int i = 0;
        Object[]fila = new Object[4];
        for(Articulo e : articulos){
            fila[0] = e.getNombre();
            fila[1] = this.misCantidadDetalles.get(i);
            fila[2] = e.getPrecioVenta();
            fila[3] = (this.misCantidadDetalles.get(i) * e.getPrecioVenta());
            this.modeloDetalles.addRow(fila);
            this.jTableDetalles.setModel(modeloDetalles);
            i++;
        }
    }
    
    public void calcularTotal(){
        float total = 0;
        if(this.articulos != null){
            int i = 0;// indice
            for(Articulo e : this.articulos){
                total = total + (e.getPrecioVenta() * this.misCantidadDetalles.get(i));
                i++;
            }
            this.jTextFieldTotal.setText(String.valueOf(total));
        }
        else{
            this.jTextFieldTotal.setText("0.0");
        }
    }
    
    public void eliminarDetalle(int i){
        this.articulos.remove(i);
        this.misCantidadDetalles.remove(i);
        DefaultTableModel dtm = (DefaultTableModel) jTableDetalles.getModel();
        dtm.removeRow(jTableDetalles.getSelectedRow()); 
    }
    
    public void activarBotonAceptar(){
        if(this.misCantidadDetalles.isEmpty()){
            this.jButtonAceptar.setEnabled(false);
        }
        else{
            this.jButtonAceptar.setEnabled(true);
        }
    }
    
    public void crearTique(){
        String numeroFactura = this.jTextFieldNumeroFactura.getText();
        Proveedor unProveedor = this.unProveedor;
        Date fechaBuscar = this.jDateChooserFechaFactura.getDate();// guardo en mi variable la fecha del sistema
        String fechaLarga = fechaBuscar.toLocaleString();// transformo a strinng mi fecha
        String fechaCorta = fechaLarga.substring(0, 10);// saco solamente la fecha de mi fechaLarga
        String horaFactura = String.valueOf(this.jSpinnerHora.getValue().toString()+":"+this.jSpinnerMinuto.getValue().toString());
        List<Articulo> articulos = null;
        articulos = this.articulos;
        List<Integer> cantidadDetalles = null;
        cantidadDetalles = this.misCantidadDetalles;
        float total = Float.parseFloat(this.jTextFieldTotal.getText());
        try {
            this.miLogica.crearFacturaCompra(unProveedor, numeroFactura, fechaCorta, horaFactura, articulos, cantidadDetalles, total);
        } catch (Exception ex) {
            Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.misCantidadDetalles.clear();// limpio mi lista de cantidades
        this.articulos.clear();// limpio mi lista de articulos
        this.unProveedor = null;// limpio mi objeto proveedor
    }
}
