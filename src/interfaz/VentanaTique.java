/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaz;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logicaDeNegocio.Articulo;
import logicaDeNegocio.ComprobanteComercial;
import logicaDeNegocio.Detalle;
import logicaDeNegocio.Sucursal;
import logicaDeNegocio.Tique;
import persistenciaJPA.exceptions.NonexistentEntityException;
import persistenciaJPA.exceptions.PreexistingEntityException;

/**
 *
 * @author Choni
 */
public class VentanaTique extends javax.swing.JInternalFrame {
    //CONTROLADORA DE LA INTERFAZ
    private ControladoraInterfaz miLogica;
    private DefaultTableModel modeloTiques = new DefaultTableModel(){
        // sobreescribo el metodo para que no se modifiquen los campos de las filas en la tabla
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex){
            return false;
        }
    };
    private DefaultTableModel modeloDetalles = new DefaultTableModel(){
        // sobreescribo el metodo para que no se modifiquen los campos de las filas en la tabla
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex){
            return false;
        }
    };
    private DefaultComboBoxModel modeloComboBox = new DefaultComboBoxModel();
    private List<Articulo> articulosPersistencia = null;// lista de articulos de la persistencia
    private List<Detalle> detallesEliminar = null;// lista de detalles para eliminar
    private List<Articulo> articulos = null;// lista de articulos para cada detalle
    private Articulo miArticulo = null;
    private int banderaModificarTique;//bandera de modificacion
    private List<Integer> misCantidadDetalles = null;// cantidades de cada articulo en cada detalle
    private SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");//formato para la fecha
    private Date fechaLocal = new Date ();// de aca obtengo la fecha del sistema
    private String fecha;
    /**
     * Creates new form VentanaTique
     */
    public VentanaTique(ControladoraInterfaz unaControladora) throws PreexistingEntityException {
        initComponents();  
        this.miLogica = unaControladora;
        this.setClosable(true);
        this.setIconifiable(true);
        // Cabecera de la tabla tiques
        modeloTiques.addColumn("Id");
        modeloTiques.addColumn("Fecha");
        modeloTiques.addColumn("Hora");
        modeloTiques.addColumn("Total");
        this.jTableTiques.setModel(modeloTiques);
        // Cabecera de la tabla detalles
        modeloDetalles.addColumn("Producto");
        modeloDetalles.addColumn("Cantidad");
        modeloDetalles.addColumn("Precio Unitario");
        modeloDetalles.addColumn("Precio Total");
        this.jTableDetalles.setModel(modeloDetalles);
        // variables locales
        this.banderaModificarTique = -1;
        // datos de la cantidad de cada detalle
        this.misCantidadDetalles = new LinkedList();
        this.articulos = new LinkedList();
        //lista de articulos
        try {
            this.articulosPersistencia = this.miLogica.dameArticulos();
        } catch (PreexistingEntityException ex) {
            Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.cargarTiques();
        this.cargarComboBoxSucursales();
        this.activarDatosTique(false);
        this.activarCantidad(false);        
        this.activarBotonAceptar(false);
        // busqueda
        this.jButtonBuscarTique.setEnabled(false);
        this.jDateChooserFechaBusqueda.setEnabled(false);
        this.jLabelFechaBuscar.setEnabled(false);
        this.jLabelSucursalBuscar.setEnabled(false);
        this.jComboBoxSucursalBuscar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanelDatosTique = new javax.swing.JPanel();
        jLabelRazonSocial = new javax.swing.JLabel();
        jLabelDireccion = new javax.swing.JLabel();
        jLabelLocalidad = new javax.swing.JLabel();
        jLabelIdTique = new javax.swing.JLabel();
        jLabelCuit = new javax.swing.JLabel();
        jLabelSucursal = new javax.swing.JLabel();
        jLabelProvincia = new javax.swing.JLabel();
        jLabelFecha = new javax.swing.JLabel();
        jTextFieldRazonSocial = new javax.swing.JTextField();
        jTextFieldDireccion = new javax.swing.JTextField();
        jTextFieldLocalidad = new javax.swing.JTextField();
        jTextFieldProvincia = new javax.swing.JTextField();
        jTextFieldCuit = new javax.swing.JTextField();
        jTextFieldIdTique = new javax.swing.JTextField();
        jTextFieldFecha = new javax.swing.JTextField();
        jLabelHora = new javax.swing.JLabel();
        jTextFieldHora = new javax.swing.JTextField();
        jComboBoxSucursal = new javax.swing.JComboBox();
        jScrollPaneDetalle = new javax.swing.JScrollPane();
        jTableDetalles = new javax.swing.JTable();
        jPanelTotal = new javax.swing.JPanel();
        jLabelTotal = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jLabelEfectivo = new javax.swing.JLabel();
        jTextFieldEfectivo = new javax.swing.JTextField();
        jTextFieldVuelto = new javax.swing.JTextField();
        jLabelVuelto = new javax.swing.JLabel();
        jButtonCalcularVuelto = new javax.swing.JButton();
        jButtonAceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jPanelAgregarProducto = new javax.swing.JPanel();
        jButtonAgregar = new javax.swing.JButton();
        jButtonQuitar = new javax.swing.JButton();
        jLabelIdProducto = new javax.swing.JLabel();
        jButtonBuscarArticulo = new javax.swing.JButton();
        jTextFieldIdProducto = new javax.swing.JTextField();
        jLabelNombreProducto = new javax.swing.JLabel();
        jLabelCantidad = new javax.swing.JLabel();
        jTextFieldNombreProducto = new javax.swing.JTextField();
        jSpinnerCantidad = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableTiques = new javax.swing.JTable();
        jButtonNuevo = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButtonBuscarTique = new javax.swing.JButton();
        jDateChooserFechaBusqueda = new com.toedter.calendar.JDateChooser();
        jCheckBoxBuscarPorFecha = new javax.swing.JCheckBox();
        jLabelFechaBuscar = new javax.swing.JLabel();
        jLabelSucursalBuscar = new javax.swing.JLabel();
        jComboBoxSucursalBuscar = new javax.swing.JComboBox();

        jPanelDatosTique.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos del Tique"));

        jLabelRazonSocial.setText("Razon social:");

        jLabelDireccion.setText("Direccion:");

        jLabelLocalidad.setText("Localidad:");

        jLabelIdTique.setText("Nro. Tique:");

        jLabelCuit.setText("C.U.I.T.:");

        jLabelSucursal.setText("Sucursal:");

        jLabelProvincia.setText("Provincia:");

        jLabelFecha.setText("Fecha:");

        jTextFieldRazonSocial.setEditable(false);

        jTextFieldDireccion.setEditable(false);

        jTextFieldLocalidad.setEditable(false);

        jTextFieldProvincia.setEditable(false);

        jTextFieldCuit.setEditable(false);

        jTextFieldIdTique.setEditable(false);

        jTextFieldFecha.setEditable(false);

        jLabelHora.setText("Hora:");

        jTextFieldHora.setEditable(false);

        jComboBoxSucursal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanelDatosTiqueLayout = new javax.swing.GroupLayout(jPanelDatosTique);
        jPanelDatosTique.setLayout(jPanelDatosTiqueLayout);
        jPanelDatosTiqueLayout.setHorizontalGroup(
            jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosTiqueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosTiqueLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelDatosTiqueLayout.createSequentialGroup()
                                .addComponent(jLabelProvincia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldProvincia))
                            .addGroup(jPanelDatosTiqueLayout.createSequentialGroup()
                                .addComponent(jLabelLocalidad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(8, 8, 8)
                        .addGroup(jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelFecha)
                            .addComponent(jLabelIdTique)))
                    .addGroup(jPanelDatosTiqueLayout.createSequentialGroup()
                        .addGroup(jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelRazonSocial)
                            .addComponent(jLabelDireccion, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosTiqueLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosTiqueLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jTextFieldRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSucursal)
                            .addComponent(jLabelCuit))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextFieldIdTique, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelDatosTiqueLayout.createSequentialGroup()
                        .addComponent(jTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHora)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldHora, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldCuit, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxSucursal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelDatosTiqueLayout.setVerticalGroup(
            jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosTiqueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRazonSocial)
                    .addComponent(jTextFieldRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSucursal)
                    .addComponent(jComboBoxSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDireccion)
                    .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCuit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCuit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLocalidad)
                    .addComponent(jLabelIdTique)
                    .addComponent(jTextFieldLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldIdTique, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosTiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProvincia)
                    .addComponent(jTextFieldProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelFecha)
                    .addComponent(jTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelHora)
                    .addComponent(jTextFieldHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTableDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDetalles.setFocusable(false);
        jTableDetalles.getTableHeader().setReorderingAllowed(false);
        jScrollPaneDetalle.setViewportView(jTableDetalles);

        jPanelTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelTotal.setText("Total: $");

        jTextFieldTotal.setEditable(false);

        jLabelEfectivo.setText("Efectivo: $");

        jTextFieldVuelto.setEditable(false);

        jLabelVuelto.setText("Vuelto: $");

        jButtonCalcularVuelto.setText("Calcular Vuelto");
        jButtonCalcularVuelto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalcularVueltoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTotalLayout = new javax.swing.GroupLayout(jPanelTotal);
        jPanelTotal.setLayout(jPanelTotalLayout);
        jPanelTotalLayout.setHorizontalGroup(
            jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTotalLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelTotalLayout.createSequentialGroup()
                        .addComponent(jLabelTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabelEfectivo))
                    .addComponent(jLabelVuelto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldEfectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldVuelto, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCalcularVuelto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelTotalLayout.setVerticalGroup(
            jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTotalLayout.createSequentialGroup()
                        .addGroup(jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTotal)
                            .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelEfectivo)
                            .addComponent(jTextFieldEfectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldVuelto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelVuelto)))
                    .addComponent(jButtonCalcularVuelto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jPanelAgregarProducto.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Agregar Producto"));

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jButtonQuitar.setText("Quitar");
        jButtonQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitarActionPerformed(evt);
            }
        });

        jLabelIdProducto.setText("Id. Producto:");

        jButtonBuscarArticulo.setText("Buscar");
        jButtonBuscarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarArticuloActionPerformed(evt);
            }
        });

        jLabelNombreProducto.setText("Nombre Producto:");

        jLabelCantidad.setText("Cantidad:");

        jTextFieldNombreProducto.setEditable(false);

        jSpinnerCantidad.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        javax.swing.GroupLayout jPanelAgregarProductoLayout = new javax.swing.GroupLayout(jPanelAgregarProducto);
        jPanelAgregarProducto.setLayout(jPanelAgregarProductoLayout);
        jPanelAgregarProductoLayout.setHorizontalGroup(
            jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                        .addComponent(jButtonAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonQuitar)
                        .addContainerGap())
                    .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                        .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                                .addComponent(jLabelNombreProducto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                                .addComponent(jLabelIdProducto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                                .addComponent(jButtonBuscarArticulo)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                                .addComponent(jLabelCantidad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanelAgregarProductoLayout.setVerticalGroup(
            jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAgregarProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIdProducto)
                    .addComponent(jButtonBuscarArticulo)
                    .addComponent(jTextFieldIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombreProducto)
                    .addComponent(jTextFieldNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCantidad)
                    .addComponent(jSpinnerCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanelAgregarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAgregar)
                    .addComponent(jButtonQuitar))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCancelar))
                    .addComponent(jScrollPaneDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanelTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelAgregarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelDatosTique, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDatosTique, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonAceptar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tiques"));

        jTableTiques.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableTiques.setFocusable(false);
        jTableTiques.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTableTiques);

        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonBuscarTique.setText("Buscar");
        jButtonBuscarTique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarTiqueActionPerformed(evt);
            }
        });

        jCheckBoxBuscarPorFecha.setText("Buscar por fecha");
        jCheckBoxBuscarPorFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBuscarPorFechaActionPerformed(evt);
            }
        });

        jLabelFechaBuscar.setText("Fecha:");

        jLabelSucursalBuscar.setText("Sucursal:");

        jComboBoxSucursalBuscar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelFechaBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooserFechaBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabelSucursalBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxSucursalBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButtonBuscarTique, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxBuscarPorFecha)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonBuscarTique)
                        .addComponent(jCheckBoxBuscarPorFecha)
                        .addComponent(jLabelSucursalBuscar)
                        .addComponent(jComboBoxSucursalBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabelFechaBuscar)
                        .addComponent(jDateChooserFechaBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButtonNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonEliminar))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3)
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNuevo)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonEliminar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        // TODO add your handling code here:
        this.activarDatosTique(true);
        //calculo el total
        this.calcularTotal();
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        // TODO add your handling code here:
        if(this.banderaModificarTique == -1){
            this.crearTique();
        }
        else{
            this.modificarTique();
        }
        this.activarDatosTique(false);
        this.activarBotonAceptar(false);
        this.limpiarDatosTique();
        try {       
            actualizarTique();
        } catch (PreexistingEntityException ex) {
            Logger.getLogger(VentanaArticulo.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.articulos = null;
        this.misCantidadDetalles = null;
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        this.jSpinnerCantidad.setValue(1);// reseteo la cantidad
        this.activarDatosTique(false);
        this.limpiarDatosTique();
        this.misCantidadDetalles.clear();// limpio mi lista de cantidades
        this.articulos.clear();// limpio mi lista de articulos        
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        // TODO add your handling code here:
        int seleccionArticulo = this.jTableTiques.getSelectedRow();
        int i = 1;
        if(seleccionArticulo == -1){// si no se selecciono nada de la tabla
            JOptionPane.showMessageDialog(null, "POR FAVOR SELECCIONE UNA FILA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            i = JOptionPane.showConfirmDialog(this, "Estas Seguro ?", "Vas a Modificar un Tique", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                int id = Integer.parseInt(this.jTableTiques.getValueAt(seleccionArticulo, 0).toString());
                try {
                    Tique unTique = miLogica.dameMiTique(id);// obtengo el tique desde mi persistencia
                    List<Detalle> detalles = unTique.getDetalles();
                    this.detallesEliminar = detalles;// almaceno los detalles que voy a eliminar
                    this.jTextFieldIdTique.setText(String.valueOf(id));// muestro el id del tique
                    //muestro todos los datos del tique en la ventana
                    this.activarDatosTique(true);
                    this.jTextFieldFecha.setText(unTique.getFechaComprobante());// muestro la fecha del comprobante
                    this.jTextFieldHora.setText(unTique.getHoraComprobante());// muestro la hora del comprobante
                    Object[]fila = new Object[4];
                    for(Detalle e : detalles){
                        Articulo unArticulo = this.miLogica.dameMiArticulo(e.getArticulo().getId());//obtengo el articulo de mi detalle
                        this.articulos.add(unArticulo);// agrego a mi lista de articulos, el articulo que esta en mi detalle
                        fila[0] = e.getArticulo().getNombre();
                        fila[1] = e.getCantidad();
                        this.misCantidadDetalles.add(e.getCantidad());// agrego a mi lista de cantidades, la cantidad que esta en mi detalle
                        fila[2] = e.getPrecioUnitario();
                        fila[3] = (e.getCantidad() * e.getPrecioUnitario());
                        this.modeloDetalles.addRow(fila);// agrego una fila a mi modelo de detalles
                        this.jTableDetalles.setModel(modeloDetalles);// envio el modelo a la tabla
                    }
                    this.calcularTotal();// calculo el total de la compra
                    this.banderaModificarTique = unTique.getIdComprobante();// modifico el valor de mi vandera a uno mayo o igual a 0
                } catch (PreexistingEntityException ex) {
                    Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
                }
                    
            }
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonBuscarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarArticuloActionPerformed
        // TODO add your handling code here:
        if(this.jTextFieldIdProducto.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "INGRESE UN CODIGO PARA REALIZAR LA BUSQUEDA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            boolean encontrar = false;//bandera para encontrar
            for(Articulo e : this.articulosPersistencia){
                if(e.isId(Integer.parseInt(this.jTextFieldIdProducto.getText()))){
                    encontrar = true;// cambio mi bandera a verdadero porque encontro
                    this.miArticulo = e;// si encuentro el articulo, lo guardo en miArticulo
                    this.jTextFieldNombreProducto.setText(e.getNombre());// muestro el nombre del producto
                    this.activarCantidad(true);// activo mi jspinner para poner la cantidad
                }
            }
            if(encontrar == false){
                JOptionPane.showMessageDialog(null, "NO SE ENCONTRO NINGUN ARTICULO CON ESE CODIGO", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
                this.miArticulo = null;// si no encuentro el articulo, miArticulo apunta a null
            }
        }
        
    }//GEN-LAST:event_jButtonBuscarArticuloActionPerformed

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        // TODO add your handling code here:
        int cantidadProducto = Integer.valueOf(this.jSpinnerCantidad.getValue().toString());// almaceno la cantidad del articulo
        if(this.miArticulo != null){// verifico si encontro un articulo
            if(miArticulo.esMenorOIgualCantidadoRequerida(cantidadProducto)){// verifico si la cantidad requerida es igual o menor a la cantidad en stock
                // limpio los campos para buscar un nuevo articulo
                this.jTextFieldNombreProducto.setText("");
                this.jTextFieldIdProducto.setText("");
                // agrego un articulo a la lista de compras
                this.articulos.add(miArticulo);
                this.misCantidadDetalles.add(cantidadProducto);
                // desactivo la cantidad
                this.activarCantidad(false);
                this.jSpinnerCantidad.setValue(1);// reseteo la cantidad
                this.actualizarDetalles();
                this.calcularTotal();// calculo el total
                this.miArticulo = null;
            }
            else{
                JOptionPane.showMessageDialog(null, "LA CANTIDAD A COMPRAR ES MAYOR DE LO QUE EXISTE EN STOCK", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            }
        }
        else{// si nunca se busco un articulo, lo informo
            JOptionPane.showMessageDialog(null, "NO SE BUSCO NINGUN ARTICULO", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitarActionPerformed
        // TODO add your handling code here:
        int seleccionDetalle = this.jTableDetalles.getSelectedRow();
        int i = 1;
        if(seleccionDetalle < 0){// si no se selecciono ninguna fila
            JOptionPane.showMessageDialog(null, "POR FAVOR SELECCIONE UNA FILA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            i = JOptionPane.showConfirmDialog(this, "Estas Seguro ?", "Vas a Eliminar un Detalle", JOptionPane.YES_NO_OPTION);
            if(i == 0){
                this.eliminarDetalle(seleccionDetalle);
                this.calcularTotal();
            }
        }
    }//GEN-LAST:event_jButtonQuitarActionPerformed

    private void jButtonCalcularVueltoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalcularVueltoActionPerformed
        // TODO add your handling code here:
        String efectivoText = this.jTextFieldEfectivo.getText();// leo el efectivo y lo almaceno como un string
        float total, efectivo, vuelto;// variables temporales locales
        if(efectivoText.equals("")){// verifico si el efectivo esta vacio
            JOptionPane.showMessageDialog(null, "POR FAVOR INGRESE UN MONTO EN EFECTIVO", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        else{//sino esta vacio, procedo a realizar el calculo del vuelto
            total = Float.parseFloat(this.jTextFieldTotal.getText());
            efectivo = Float.parseFloat(efectivoText);
            if(efectivo < total){//verifico si el efectivo no es menor al total de la compra
                JOptionPane.showMessageDialog(null, "EL MONTO EN EFECTIVO ES MENOR AL TOTAL DE LA COMPRA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            }
            else{//sino, procedo a informar el vuelto
                vuelto = efectivo - total;
                this.jTextFieldVuelto.setText(String.valueOf(vuelto));
                // recien procedo a habilitar el boton aceptar
                this.activarBotonAceptar(true);
            }
        }
    }//GEN-LAST:event_jButtonCalcularVueltoActionPerformed

    private void jButtonBuscarTiqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarTiqueActionPerformed
        // TODO add your handling code here:
        Date fechaBuscar = this.jDateChooserFechaBusqueda.getDate();// guardo en mi variable la fecha del sistema
        String fechaLarga = fechaBuscar.toLocaleString();// transformo a strinng mi fecha
        String fechaCorta = fechaLarga.substring(0, 10);// saco solamente la fecha de mi fechaLarga
        Sucursal miSucursal = null;
        int numeroSucursal = Integer.parseInt(this.jComboBoxSucursalBuscar.getSelectedItem().toString());
        List<Tique> tiques = new LinkedList<Tique>();
        List<Tique> tiquesConFecha = new LinkedList<Tique>();
        try {
            tiques = this.miLogica.dameTiques();
        } catch (PreexistingEntityException ex) {
            Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(!tiques.isEmpty()){// si mi lista no esta vacia la recorro
            for(Tique e : tiques){//recorro mi lista de tiques
                if(e.isFechaComprobante(fechaCorta)){//pregunto si el tique contiene la fecha que saque del jDateChooser
                    if(e.getUnaSucursal().isSucursal(numeroSucursal)){// si es del la sucursal que tiene el numero
                        tiques.add(e);// agrego un tique a la lista
                    }
                }
            }
        }
        if(tiques.isEmpty()){// pregunto si mi lista esta vacia
            JOptionPane.showMessageDialog(null, "NO HAY TIQUE EMITIDOS EN LA SUCURSAL "+ String.valueOf(numeroSucursal) +" CON LA FECHA: "+ fechaCorta, "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            this.jCheckBoxBuscarPorFecha.setSelected(false);
            this.jButtonBuscarTique.setEnabled(false);
            this.jDateChooserFechaBusqueda.setEnabled(false);
            this.jDateChooserFechaBusqueda.setCalendar(null);// limpio el selector de fecha
        }
        else{// si mi lista no esta vacia
            // limpio mi tabla de tiques
            DefaultTableModel modelo = (DefaultTableModel) jTableTiques.getModel();
            int filas = jTableTiques.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
            // cargo mi tabla con la nueva lista de tiques
            Object[]fila= new Object[4];
            for(ComprobanteComercial e : tiques){
                    fila[0] = e.getIdComprobante();
                    fila[1] = e.getFechaComprobante();
                    fila[2] = e.getHoraComprobante();
                    fila[3] = e.getTotalComprobante();  
                    this.modeloTiques.addRow(fila);
                    this.jTableTiques.setModel(modeloTiques);
            }
        }
    }//GEN-LAST:event_jButtonBuscarTiqueActionPerformed

    private void jCheckBoxBuscarPorFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBuscarPorFechaActionPerformed
        // TODO add your handling code here:
        if (this.jCheckBoxBuscarPorFecha.isSelected()) {
            this.jLabelFechaBuscar.setEnabled(true);
            this.jLabelSucursalBuscar.setEnabled(true);
            this.jComboBoxSucursalBuscar.setEnabled(true);
            this.jButtonBuscarTique.setEnabled(true);
            this.jDateChooserFechaBusqueda.setEnabled(true);
            this.jDateChooserFechaBusqueda.setDate(new Date());// agrego el dia de hoy
        } else {
            this.jLabelFechaBuscar.setEnabled(false);
            this.jLabelSucursalBuscar.setEnabled(false);
            this.jComboBoxSucursalBuscar.setEnabled(false);
            this.jComboBoxSucursalBuscar.setSelectedIndex(0);
            this.jButtonBuscarTique.setEnabled(false);
            this.jDateChooserFechaBusqueda.setEnabled(false);
            this.jDateChooserFechaBusqueda.setCalendar(null);// limpio el selector de fecha
            // limpio mi tabla de tiques
            DefaultTableModel modelo = (DefaultTableModel) jTableTiques.getModel();
            int filas = jTableTiques.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
            try {
                this.cargarTiques();// cargo todos los tiques en la tabla
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jCheckBoxBuscarPorFechaActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        int seleccionArticulo = this.jTableTiques.getSelectedRow();
        int i = 1;
        if(seleccionArticulo == -1){// si no se selecciono nada de la tabla
            JOptionPane.showMessageDialog(null, "POR FAVOR SELECCIONE UNA FILA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        else{
            i = JOptionPane.showConfirmDialog(this, "Estas Seguro ?", "Vas a Eliminar un Tique", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                try {
                    int id = Integer.parseInt(this.jTableTiques.getValueAt(seleccionArticulo, 0).toString());
                    this.miLogica.eliminarTique(id);
                    // elimino mi tique de la tabla
                    DefaultTableModel dtm = (DefaultTableModel) jTableTiques.getModel();
                    dtm.removeRow(jTableTiques.getSelectedRow()); 
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonBuscarArticulo;
    private javax.swing.JButton jButtonBuscarTique;
    private javax.swing.JButton jButtonCalcularVuelto;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonQuitar;
    private javax.swing.JCheckBox jCheckBoxBuscarPorFecha;
    private javax.swing.JComboBox jComboBoxSucursal;
    private javax.swing.JComboBox jComboBoxSucursalBuscar;
    private com.toedter.calendar.JDateChooser jDateChooserFechaBusqueda;
    private javax.swing.JLabel jLabelCantidad;
    private javax.swing.JLabel jLabelCuit;
    private javax.swing.JLabel jLabelDireccion;
    private javax.swing.JLabel jLabelEfectivo;
    private javax.swing.JLabel jLabelFecha;
    private javax.swing.JLabel jLabelFechaBuscar;
    private javax.swing.JLabel jLabelHora;
    private javax.swing.JLabel jLabelIdProducto;
    private javax.swing.JLabel jLabelIdTique;
    private javax.swing.JLabel jLabelLocalidad;
    private javax.swing.JLabel jLabelNombreProducto;
    private javax.swing.JLabel jLabelProvincia;
    private javax.swing.JLabel jLabelRazonSocial;
    private javax.swing.JLabel jLabelSucursal;
    private javax.swing.JLabel jLabelSucursalBuscar;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JLabel jLabelVuelto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelAgregarProducto;
    private javax.swing.JPanel jPanelDatosTique;
    private javax.swing.JPanel jPanelTotal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPaneDetalle;
    private javax.swing.JSpinner jSpinnerCantidad;
    private javax.swing.JTable jTableDetalles;
    private javax.swing.JTable jTableTiques;
    private javax.swing.JTextField jTextFieldCuit;
    private javax.swing.JTextField jTextFieldDireccion;
    private javax.swing.JTextField jTextFieldEfectivo;
    private javax.swing.JTextField jTextFieldFecha;
    private javax.swing.JTextField jTextFieldHora;
    private javax.swing.JTextField jTextFieldIdProducto;
    private javax.swing.JTextField jTextFieldIdTique;
    private javax.swing.JTextField jTextFieldLocalidad;
    private javax.swing.JTextField jTextFieldNombreProducto;
    private javax.swing.JTextField jTextFieldProvincia;
    private javax.swing.JTextField jTextFieldRazonSocial;
    private javax.swing.JTextField jTextFieldTotal;
    private javax.swing.JTextField jTextFieldVuelto;
    // End of variables declaration//GEN-END:variables

    public void activarDatosTique(boolean b){
        if(b){
            this.jTextFieldRazonSocial.setText("Guara Soft S.A");
            this.jTextFieldDireccion.setText("Av. San Lorenzo 224");
            this.jTextFieldLocalidad.setText("Posadas");
            this.jTextFieldProvincia.setText("Misiones");
            this.jTextFieldCuit.setText("30-711224360-3"); 
            //obtengo la fecha en un string
            this.fecha = fechaLocal.toLocaleString();
            //leo y almaceno la fecha y hora para crear mi tique
            String fecha = this.fecha.substring(0, 10);//codigo para obtener la fecha
            String hora = this.fecha.substring(11, 16);// codigo para obtener la hora
            this.jTextFieldFecha.setText(fecha);
            this.jTextFieldHora.setText(hora);            
        }
        else{
            this.jTextFieldRazonSocial.setText("");
            this.jTextFieldDireccion.setText("");
            this.jTextFieldLocalidad.setText("");
            this.jTextFieldProvincia.setText("");
            this.jTextFieldCuit.setText("");
            this.jTextFieldFecha.setText("");
            this.jTextFieldHora.setText("");
        }
        // datos del tique
        this.jPanelDatosTique.setEnabled(b);
        this.jLabelRazonSocial.setEnabled(b);
        this.jLabelDireccion.setEnabled(b);
        this.jLabelLocalidad.setEnabled(b);
        this.jLabelProvincia.setEnabled(b);
        this.jLabelCuit.setEnabled(b);
        this.jLabelSucursal.setEnabled(b);
        this.jLabelIdTique.setEnabled(b);
        this.jLabelFecha.setEnabled(b);
        this.jLabelHora.setEnabled(b);
        this.jTextFieldRazonSocial.setEnabled(b);
        this.jTextFieldDireccion.setEnabled(b);
        this.jTextFieldLocalidad.setEnabled(b);
        this.jTextFieldProvincia.setEnabled(b);
        this.jTextFieldCuit.setEnabled(b);
        this.jComboBoxSucursal.setEnabled(b);
        this.jTextFieldIdTique.setEnabled(b);
        this.jTextFieldFecha.setEnabled(b);
        this.jTextFieldHora.setEnabled(b);        
        // agregar producto
        this.jPanelAgregarProducto.setEnabled(b);
        this.jTextFieldIdProducto.setEnabled(b);
        this.jTextFieldNombreProducto.setEnabled(b);
        this.jLabelIdProducto.setEnabled(b);
        this.jLabelNombreProducto.setEnabled(b);
        this.jLabelCantidad.setEnabled(b);
        this.jButtonBuscarArticulo.setEnabled(b);
        this.jButtonAgregar.setEnabled(b);
        this.jButtonQuitar.setEnabled(b);
        // detalles
        this.jTableDetalles.setEnabled(b);
        this.jScrollPaneDetalle.setEnabled(b);
        // total
        this.jPanelTotal.setEnabled(b);
        this.jLabelTotal.setEnabled(b);
        this.jLabelEfectivo.setEnabled(b);
        this.jLabelVuelto.setEnabled(b);
        this.jTextFieldTotal.setEnabled(b);
        this.jTextFieldEfectivo.setEnabled(b);
        this.jTextFieldVuelto.setEnabled(b);
        this.jButtonCalcularVuelto.setEnabled(b);
        this.jButtonCancelar.setEnabled(b);
        
    }
    
    public void activarCantidad(boolean b){        
        this.jSpinnerCantidad.setEnabled(b);
    }
    
    public void limpiarDatosTique(){
        // borro todos los detalles del tique
        DefaultTableModel modelo = (DefaultTableModel) jTableDetalles.getModel();
        int filas = jTableDetalles.getRowCount();
        for (int i = 0;filas>i; i++) {
            modelo.removeRow(0);
        }
        this.jTextFieldTotal.setText("");
        this.jTextFieldEfectivo.setText("");
        this.jTextFieldVuelto.setText("");
        this.jTextFieldIdTique.setText("");
        this.jComboBoxSucursal.setSelectedIndex(0);
    }
    
    public void calcularTotal(){
        float total = 0;
        if(this.articulos != null){
            int i = 0;// indice
            for(Articulo e : this.articulos){
                total = total + (e.getPrecioVenta() * this.misCantidadDetalles.get(i));
                i++;
            }
            this.jTextFieldTotal.setText(String.valueOf(total));
        }
        else{
            this.jTextFieldTotal.setText("0.0");
        }
    }
    
    public void actualizarDetalles(){// borro todos los detalles uno a uno
        DefaultTableModel modelo = (DefaultTableModel) jTableDetalles.getModel();
        int filas = jTableDetalles.getRowCount();
        for (int i = 0;filas>i; i++) {
            modelo.removeRow(0);
        }
        this.cargarDetalles();
    }
    
    public void cargarDetalles(){
        int i = 0;
        Object[]fila = new Object[4];
        for(Articulo e : articulos){
            fila[0] = e.getNombre();
            fila[1] = this.misCantidadDetalles.get(i);
            fila[2] = e.getPrecioVenta();
            fila[3] = (this.misCantidadDetalles.get(i) * e.getPrecioVenta());
            this.modeloDetalles.addRow(fila);
            this.jTableDetalles.setModel(modeloDetalles);
            i++;
        }
    }
    
    public void eliminarDetalle(int i){
        this.articulos.remove(i);
        this.misCantidadDetalles.remove(i);
        DefaultTableModel dtm = (DefaultTableModel) jTableDetalles.getModel();
        dtm.removeRow(jTableDetalles.getSelectedRow()); 
    }
    
    public void activarBotonAceptar(boolean b){
        this.jButtonAceptar.setEnabled(b);
    }
    
    public void cargarTiques() throws PreexistingEntityException{
        List<Tique> tiques = this.miLogica.dameTiques();
        Object[]fila= new Object[4];
        for(Tique e : tiques){
            fila[0] = e.getIdComprobante();
            fila[1] = e.getFechaComprobante();
            fila[2] = e.getHoraComprobante();
            fila[3] = e.getTotalComprobante();  
            this.modeloTiques.addRow(fila);
            this.jTableTiques.setModel(modeloTiques);
        }
    }
    
    public void cargarComboBoxSucursales() throws PreexistingEntityException{
        List<Sucursal> sucursales = this.miLogica.dameSucursales();
        for(Sucursal e : sucursales){
            this.modeloComboBox.addElement(e.getNumeroSucursal());
        }
        this.jComboBoxSucursal.setModel(modeloComboBox);
        this.jComboBoxSucursalBuscar.setModel(modeloComboBox);
    }
    
    public void crearTique(){
        String fechaTique = this.jTextFieldFecha.getText();
        String horaTique = this.jTextFieldHora.getText();
        List<Articulo> articulos = null;
        articulos = this.articulos;
        List<Integer> cantidadDetalles = null;
        cantidadDetalles = this.misCantidadDetalles;
        float total = Float.parseFloat(this.jTextFieldTotal.getText());
        int numeroSucursal = Integer.parseInt(this.jComboBoxSucursal.getSelectedItem().toString());
        try {
            this.miLogica.crearTique(fechaTique, horaTique, articulos, cantidadDetalles, total, numeroSucursal);
        } catch (Exception ex) {
            Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.misCantidadDetalles.clear();// limpio mi lista de cantidades
        this.articulos.clear();// limpio mi lista de articulos
    }
    
    public void modificarTique(){
        String fechaTique = this.jTextFieldFecha.getText();
        String horaTique = this.jTextFieldHora.getText();
        List<Articulo> articulos = null;
        articulos = this.articulos;
        List<Integer> cantidadDetalles = null;
        cantidadDetalles = this.misCantidadDetalles;
        float total = Float.parseFloat(this.jTextFieldTotal.getText());
        int id = Integer.parseInt(this.jTextFieldIdTique.getText());
        int numeroSucursal = Integer.parseInt(this.jComboBoxSucursal.getSelectedItem().toString());
        try {
            this.miLogica.modificarTique(id, fechaTique, horaTique, articulos, cantidadDetalles, total, this.detallesEliminar, numeroSucursal);
            this.banderaModificarTique = -1;
        } catch (Exception ex) {
            Logger.getLogger(VentanaTique.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.detallesEliminar = null;
    }
    
    public void actualizarTique() throws PreexistingEntityException{
        DefaultTableModel modelo = (DefaultTableModel) jTableTiques.getModel();
        int filas = jTableTiques.getRowCount();
        for (int i = 0;filas>i; i++) {
            modelo.removeRow(0);
        }
        this.cargarTiques();
    }
}
